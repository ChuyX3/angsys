<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="ang::integer_constant&lt;*&gt;">
    <DisplayString>{value}</DisplayString>
  </Type>
  
  <Type Name="ang::memory::allocator_internal">
    <DisplayString>{_allocator_type, en}</DisplayString>
    <Expand>
      <ExpandedItem>memory_map</ExpandedItem>
    </Expand>
  </Type>
  
  <Type Name="ang::runtime::inherit_info">
    <DisplayString>[{*base} : {(uint)offset, x}]</DisplayString>
    <Expand>
      <Item Name="[type]" ExcludeView="simple">*base</Item>
      <Item Name="[offset]" ExcludeView="simple">offset, x</Item>
    </Expand>
  </Type>
  
  <Type Name="ang::collections::array_view&lt;ang::runtime::inherit_info&gt;">
    <DisplayString>inherit[{wsize(m_last - m_first)}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">wsize(m_last - m_first)</Item>
      <ArrayItems>
        <Size>wsize(m_last - m_first)</Size>
        <ValuePointer>m_first</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <Type Name="ang::runtime::__type_info">
    <DisplayString>{m_type_name.m_view, sb}</DisplayString>
    <Expand>
      <Item Name="[type_name]" ExcludeView="simple">m_type_name</Item>
      <Item Name="[type_id]" ExcludeView="simple">(size_t)m_type_name.m_view</Item>
      <Item Name="[gender]" ExcludeView="simple">m_gender,en</Item>
      <Item Name="[size]" ExcludeView="simple">m_size,x</Item>
      <Item Name="[aligment]" ExcludeView="simple">m_aligment,x</Item>
      <Item Name="[parents]" Condition="m_parents.m_first != 0" Optional="true">m_parents</Item>
    </Expand>
  </Type>
  
  <Type Name="ang::collections::pair&lt;*&gt;">
    <DisplayString>[{key} : {value}]</DisplayString>
    <Expand>
      <Item Name="[key]" ExcludeView="simple">key</Item>
      <Item Name="[value]" ExcludeView="simple">value</Item>
    </Expand>
  </Type>
  
  <Type Name="ang::collections::__tuple_storage&lt;*&gt;">
    <DisplayString Optional="true">{m_first}, {m_rest}</DisplayString>
    <DisplayString>{m_first}</DisplayString>
    <Expand>
      <Item Name="[value]" ExcludeView="simple">m_first</Item>
      <ExpandedItem ExcludeView="simple" Optional="true">m_rest</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="ang::collections::tuple&lt;*&gt;">
    <DisplayString>tuple[{m_data}]</DisplayString>
    <Expand>
      <ExpandedItem>m_data</ExpandedItem>
    </Expand>
  </Type>
  
  <Type Name="ang::collections::array_node&lt;*&gt;">
    <DisplayString>array[{wsize(m_last - m_first)}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">wsize(m_last - m_first)</Item>
      <ArrayItems>
        <Size>wsize(m_last - m_first)</Size>
        <ValuePointer>m_first</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <Type Name="ang::collections::vector&lt;*&gt;">
    <DisplayString>vector[{wsize(m_last - m_first)}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">wsize(m_last - m_first)</Item>
      <Item Name="[capacity]" ExcludeView="simple">wsize(m_end - m_first)</Item>
      <ArrayItems>
        <Size>wsize(m_last - m_first)</Size>
        <ValuePointer>m_first</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <Type Name="ang::collections::list&lt;*&gt;">
    <DisplayString>list[{m_size}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <LinkedListItems>
        <Size>m_size</Size>
        <HeadPointer>m_first</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>data</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="ang::collections::stack&lt;*&gt;">
    <DisplayString>stack[{m_size}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <LinkedListItems>
        <Size>m_size</Size>
        <HeadPointer>m_first</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>data</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="ang::collections::queue&lt;*&gt;">
    <DisplayString>queue[{m_size}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <LinkedListItems>
        <Size>m_size</Size>
        <HeadPointer>m_first</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>data</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="ang::collections::hash_map&lt;*&gt;">
    <DisplayString>map[{m_size}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <CustomListItems MaxItemsPerView="10000" ExcludeView="Test" Optional="true">
        <Variable Name="i_" InitialValue="0" />
        <Variable Name="sz_" InitialValue="wsize(m_table.m_last - m_table.m_first)" />
        <Variable Name="node_" InitialValue="m_table.m_first == nullptr ? nullptr : m_table.m_first[0].first" />
        <Size>m_size</Size>
        <Loop Condition="i_ &lt; sz_">
          <If Condition="node_ == nullptr">
            <Exec>i_++</Exec>
            <Exec>node_ = m_table.m_first[i_].first</Exec>
          </If>
          <Else>
            <Item>node_->data</Item>
            <Exec>node_ = node_-&gt;next</Exec>
          </Else>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="ang::collections::binary_map&lt;*&gt;">
    <DisplayString>map[{m_size}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <TreeItems>
        <Size>m_size</Size>
        <HeadPointer>m_root.m_value</HeadPointer>
        <LeftPointer>nodes[1]</LeftPointer>
        <RightPointer>nodes[2]</RightPointer>
        <ValueNode>data</ValueNode>
      </TreeItems>
    </Expand>
  </Type>


  <Type Name="ang::text::str_view&lt;void,*&gt;">
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 1">{m_value, s}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 2">{m_value, su}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 3">{m_value, s8}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 4">{m_value, su}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 8">{m_value, s32}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 1">m_value, s</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 2">m_value, su</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 3">m_value, s8</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 4">m_value, su</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 8">m_value, s32</StringView>
    <Expand>
      <Item Name="[format]" ExcludeView="simple">m_encoding,en</Item>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <Item Name="[buffer]" ExcludeView="simple">m_value</Item>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;void const,*&gt;">
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 1">{m_value, s}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 2">{m_value, su}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 3">{m_value, s8}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 4">{m_value, su}</DisplayString>
    <DisplayString Condition="m_value != 0 &amp;&amp; m_encoding == 8">{m_value, s32}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 1">m_value, s</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 2">m_value, su</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 3">m_value, s8</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 4">m_value, su</StringView>
    <StringView Condition="m_value != 0 &amp;&amp; m_encoding == 8">m_value, s32</StringView>
    <Expand>
      <Item Name="[format]" ExcludeView="simple">m_encoding,en</Item>
      <Item Name="[size]" Condition="m_encoding == 1" ExcludeView="simple">m_size/sizeof(char)</Item>
      <Item Name="[size]" Condition="m_encoding == 2" ExcludeView="simple">m_size/sizeof(wchar_t)</Item>
      <Item Name="[size]" Condition="m_encoding == 3" ExcludeView="simple">m_size/sizeof(unsigned char)</Item>
      <Item Name="[size]" Condition="m_encoding == 4" ExcludeView="simple">m_size/sizeof(char16_t)</Item>
      <Item Name="[size]" Condition="m_encoding == 8" ExcludeView="simple">m_size/sizeof(char32_t)</Item>
      <Item Name="[buffer]" ExcludeView="simple">m_value</Item>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, s}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, s</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;wchar_t,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, su</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;wchar_t const,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, su</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;unsigned char,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, s8}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, s8</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;unsigned char const,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, s8}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, s8</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;char16_t,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, su</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;char16_t const,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, su</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;char32_t,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, s32}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, s32</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::text::str_view&lt;char32_t const,*&gt;">
    <DisplayString Condition="m_view != 0">{m_view, s32}</DisplayString>
    <DisplayString>null</DisplayString>
    <StringView Condition="m_view != 0">m_view, s32</StringView>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">m_size</Item>
      <ArrayItems>
        <Size>m_size</Size>
        <ValuePointer>m_view</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::runtime::__type_info">
    <DisplayString>{_type_name}</DisplayString>
    <Expand>
      <Item Name="[type_name]" ExcludeView="simple">m_type_name</Item>
      <Item Name="[gender]" ExcludeView="simple">m_gender,en</Item>
      <Item Name="[size]" ExcludeView="simple">m_size,x</Item>
      <Item Name="[aligment]" ExcludeView="simple">m_aligment,x</Item>
      <Item Name="[parents]" Condition="m_parents.m_data != 0" ExcludeView="simple">m_parents</Item>
    </Expand>
  </Type>
  
  <Type Name="ang::text::fast_string&lt;*&gt;">
    <DisplayString Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 1">{m_data.m_stack_buffer, s}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 2">{m_data.m_stack_buffer, su}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 3">{m_data.m_stack_buffer, s8}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 4">{m_data.m_stack_buffer, su}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 8">{m_data.m_stack_buffer, s32}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 1">{m_data.m_allocated_buffer, s}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 2">{m_data.m_allocated_buffer, su}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 3">{m_data.m_allocated_buffer, s8}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 4">{m_data.m_allocated_buffer, su}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 8">{m_data.m_allocated_buffer, s32}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 1">{m_data.m_attached_buffer, s}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 2">{m_data.m_attached_buffer, su}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 3">{m_data.m_attached_buffer, s8}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 4">{m_data.m_attached_buffer, su}</DisplayString>
    <DisplayString Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 8">{m_data.m_attached_buffer, s32}</DisplayString>
    
    <StringView Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 1">m_data.m_stack_buffer, s</StringView>
    <StringView Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 2">m_data.m_stack_buffer, su</StringView>
    <StringView Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 3">m_data.m_stack_buffer, s8</StringView>
    <StringView Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 4">m_data.m_stack_buffer, su</StringView>
    <StringView Condition="m_data.m_storage_type &gt;= 0 &amp;&amp; ENCODING == 8">m_data.m_stack_buffer, s32</StringView>
    <StringView Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 1">m_data.m_allocated_buffer, s</StringView>
    <StringView Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 2">m_data.m_allocated_buffer, su</StringView>
    <StringView Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 3">m_data.m_allocated_buffer, s8</StringView>
    <StringView Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 4">m_data.m_allocated_buffer, su</StringView>
    <StringView Condition="m_data.m_storage_type == -1 &amp;&amp; ENCODING == 8">m_data.m_allocated_buffer, s32</StringView>
    <StringView Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 1">m_data.m_attached_buffer, s</StringView>
    <StringView Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 2">m_data.m_attached_buffer, su</StringView>
    <StringView Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 3">m_data.m_attached_buffer, s8</StringView>
    <StringView Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 4">m_data.m_attached_buffer, su</StringView>
    <StringView Condition="m_data.m_storage_type == -2 &amp;&amp; ENCODING == 8">m_data.m_attached_buffer, s32</StringView>
    <Expand>
      <Item Name="[format]" ExcludeView="simple">ENCODING,en</Item>
      <Item Name="[size]" Condition="m_data.m_storage_type &gt;= 0" ExcludeView="simple">m_data.m_stack_length</Item>
      <Item Name="[size]" Condition="m_data.m_storage_type == -1" ExcludeView="simple">m_data.m_allocated_length</Item>
      <Item Name="[size]" Condition="m_data.m_storage_type == -2" ExcludeView="simple">m_data.m_attached_length</Item>
      <Item Name="[capacity]" Condition="m_data.m_storage_type &gt;= 0" ExcludeView="simple">CAPACITY-1</Item>
      <Item Name="[capacity]" Condition="m_data.m_storage_type == -1" ExcludeView="simple">m_data.m_allocated_capacity</Item>
      <Item Name="[buffer]" Condition="m_data.m_storage_type &gt;= 0" ExcludeView="simple">m_data.m_stack_buffer</Item>
      <Item Name="[buffer]" Condition="m_data.m_storage_type == -1" ExcludeView="simple">m_data.m_allocated_buffer</Item>
      <Item Name="[buffer]" Condition="m_data.m_storage_type == -2" ExcludeView="simple">m_data.m_attached_buffer</Item>
    </Expand>
  </Type>


  <Type Name="ang::__anyone_storage&lt;*&gt;">
    <DisplayString Condition="m_current == INDEX">{m_first}</DisplayString>
    <DisplayString Condition="m_current &gt;= INDEX" Optional="true">{m_rest}</DisplayString>
    <Expand>
      <ExpandedItem Condition="m_current == INDEX">m_first</ExpandedItem>
      <ExpandedItem Condition="m_current &gt; INDEX" Optional="true">m_rest</ExpandedItem>
    </Expand>
  </Type>
    
  <Type Name="ang::anyone&lt;*&gt;">
    <DisplayString >{m_data}</DisplayString>
    <Expand>
      <Item Name="index">m_current</Item>
      <Item Name="value" Condition="m_current &lt; SIZE">m_data</Item>
    </Expand>
  </Type>

  <Type Name="ang::value&lt;*&gt;">
    <DisplayString Optional="true" Condition="gender_id == 2 || gender_id == 3">{*($T1*)this,nd}</DisplayString>
    <DisplayString Condition="gender_id == 0">{($T1)m_value}</DisplayString>
    <DisplayString Condition="gender_id == 1">{($T1)m_value, en}</DisplayString>
    <Expand>
      <ExpandedItem Condition="gender_id == 2 || gender_id == 3" Optional="true">*($T1*)this,nd</ExpandedItem>
      <ExpandedItem Condition="gender_id == 0" Optional="true">*m_value</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="enum_class&lt;*&gt;">
    <DisplayString>{($T1)m_value, en}</DisplayString>
  </Type>

  <Type Name="flags_class&lt;*&gt;">
    <DisplayString>{($T1)m_value, en}</DisplayString>
  </Type>

  <Type Name="ang::error">
    <DisplayString>error : {m_message}</DisplayString>
    <Expand>
      <Item Name="[code]" Condition="m_code.m_value != ~0">m_code</Item>
      <Item Name="[info]" Condition="m_code.m_value == ~0">m_info</Item>
      <Item Name="[message]">m_message</Item>
    </Expand>
  </Type>

  <Type Name="ang::exception">
    <DisplayString>exception : {m_message}</DisplayString>
    <Expand>
      <Item Name="[code]" Condition="m_code.m_value != ~0">m_code</Item>
      <Item Name="[info]" Condition="m_code.m_value == ~0">m_info</Item>
      <Item Name="[message]">m_message</Item>
    </Expand>
  </Type>

  <Type Name="ang::optional&lt;*&gt;">
    <DisplayString Optional="true" Condition="m_error.m_code.m_value != 0">{m_error}</DisplayString>
    <DisplayString Optional="true" Condition="m_error.m_code.m_value == 0">{m_result}</DisplayString>
    <Expand>
      <ExpandedItem Condition="m_error.m_code.m_value != 0" Optional="true">m_error</ExpandedItem>
      <ExpandedItem Condition="m_error.m_code.m_value == 0" Optional="true">m_result</ExpandedItem>
    </Expand>
  </Type>
  
</AutoVisualizer>