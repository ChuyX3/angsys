<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="ang::collections::array_view&lt;*&gt;">
    <DisplayString>array[{_size}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_size</Item>
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::collections::stack_array&lt;*&gt;">
    <DisplayString>array[{SIZE}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">SIZE</Item>
      <ArrayItems>
        <Size>SIZE</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <Type Name="ang::collections::scope_array&lt;*&gt;">
    <DisplayString>array[{_size}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_size</Item>
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;*&gt;">
    <DisplayString Condition="view_ != 0">{view_, s}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;wchar_t&gt;">
    <DisplayString Condition="view_ != 0">{view_, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;wchar_t const&gt;">
    <DisplayString Condition="view_ != 0">{view_, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;unsigned char&gt;">
    <DisplayString Condition="view_ != 0">{view_, s8}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;unsigned char const&gt;">
    <DisplayString Condition="view_ != 0">{view_, s8}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;char16_t&gt;">
    <DisplayString Condition="view_ != 0">{view_, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;char16_t const&gt;">
    <DisplayString Condition="view_ != 0">{view_, su}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;char32_t&gt;">
    <DisplayString Condition="view_ != 0">{view_, s32}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::str_view&lt;char32_t const&gt;">
    <DisplayString Condition="view_ != 0">{view_, s32}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">size_</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>view_</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::runtime::__type_info">
    <DisplayString>{_type_name}</DisplayString>
    <Expand>
      <Item Name="[type_name]" ExcludeView="simple">_type_name</Item>
      <Item Name="[genre]" ExcludeView="simple">_genre,en</Item>
      <Item Name="[size]" ExcludeView="simple">_size,x</Item>
      <Item Name="[aligment]" ExcludeView="simple">_aligment,x</Item>
      <Item Name="[parents]" Condition="_parents._data != 0" ExcludeView="simple">_parents</Item>
    </Expand>
  </Type>

  <Type Name="ang::object_wrapper&lt;*&gt;">
    <DisplayString Condition="_ptr != 0">{*_ptr}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <ExpandedItem>_ptr</ExpandedItem>
    </Expand>
  </Type>


  <Type Name="ang::strings::basic_const_string_buffer&lt;*&gt;">
    <DisplayString Condition="view_ != 0">{((this + 1) + sizeof(wsize)), s}</DisplayString>
    <DisplayString>null</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">*(wsize*)(this + 1)</Item>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>(char*)(wsize(this + 1) + sizeof(wsize))</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ang::collections::hash_map_object&lt;*&gt;">
    <DisplayString>map[{_count}]</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_count</Item>
      <CustomListItems MaxItemsPerView="5000" ExcludeView="Test">
        <Variable Name="i_" InitialValue="0" />
        <Variable Name="node_" InitialValue="_table._data == nullptr ? nullptr : *_table._data" />
        <Size>_count</Size>
        <Loop Condition="i_ &lt; _table._size">
          <If Condition="node_ == nullptr">
            <Exec>i_++</Exec>
            <Exec>node_ = _table._data[i_]</Exec>
          </If>
          <Else>
            <Item>node_->data</Item>
            <Exec>node_ = node_->next</Exec>
          </Else>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

</AutoVisualizer>